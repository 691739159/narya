package {{package}} {

{{#imports}}
import {{this}};
{{/imports}}

/**
 * A functional adapter for the {{name}}Service_{{listener.listenerName}}Listener interface.
 */
public class {{name}}Service_{{listener.listenerName}}ListenerAdapter
    implements {{name}}Service_{{listener.listenerName}}Listener
{
    /**
     * Creates a new {{name}} service {{listener.listenerName}} listener that will delegate to the
     * given function(s). Any Function that is null will simply not be called.
     */
    public function {{name}}Service_{{listener.listenerName}}ListenerAdapter (
        {{adapterCtorArgs}}failed :Function)
    {
{{#listener.methods}}
        _{{method.name}} = {{method.name}};
{{/listener.methods}}
        _failed = failed;
    }
{{#listener.methods}}

    // from Java {{name}}Service_{{listener.listenerName}}Listener
    public function {{method.name}} ({{getASArgList}}) :void
    {
        if (_{{method.name}} != null) {
            _{{method.name}}({{getASInvokeArgList}});
        }
    }
{{/listener.methods}}

    // from InvocationService_InvocationListener
    public function requestFailed (cause :String) :void
    {
        if (_failed != null) {
            _failed(cause);
        }
    }

{{#listener.methods}}
    protected var _{{method.name}} :Function;
{{/listener.methods}}
    protected var _failed :Function;
}
}
