//
// $Id: PlaceObject.dobj,v 1.13 2003/06/06 23:58:53 ray Exp $

package com.threerings.crowd.data;

import java.util.Iterator;

import com.threerings.presents.dobj.DObject;
import com.threerings.presents.dobj.DSet;
import com.threerings.presents.dobj.OidList;

import com.threerings.crowd.chat.data.SpeakMarshaller;

public class PlaceObject extends DObject
{
    /**
     * Tracks the oid of the body objects of all of the occupants of this
     * place.
     */
    public OidList occupants = new OidList();

    /**
     * Contains an info record (of type {@link OccupantInfo}) for each
     * occupant that contains information about that occupant that needs
     * to be known by everyone in the place. <em>Note:</em> Don't obtain
     * occupant info records directly from this set when on the server,
     * use <code>PlaceManager.getOccupantInfo()</code> instead (along with
     * <code>PlaceManager.updateOccupantInfo()</code>) because it does
     * some special processing to ensure that readers and updaters don't
     * step on one another even if they make rapid fire changes to a
     * user's occupant info.
     */
    public DSet occupantInfo = new DSet();

    /** Used to generate speak requests on this place object. */
    public SpeakMarshaller speakService;

    /**
     * Looks up a user's occupant info by name.
     *
     * @return the occupant info record for the named user or null if no
     * user in the room has that username.
     */
    public OccupantInfo getOccupantInfo (String username)
    {
        Iterator iter = occupantInfo.entries();
        while (iter.hasNext()) {
            OccupantInfo info = (OccupantInfo)iter.next();
            if (info.username.equals(username)) {
                return info;
            }
        }
        return null;
    }
}
