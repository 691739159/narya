package {{package}} {

{{#imports}}
import {{this}};
{{/imports}}

/**
 * Provides the implementation of the <code>{{name}}Service</code> interface
 * that marshalls the arguments and delivers the request to the provider
 * on the server. Also provides an implementation of the response listener
 * interfaces that marshall the response arguments and deliver them back
 * to the requesting client.
 */
public class {{name}}Marshaller extends InvocationMarshaller
    implements {{name}}Service
{
{{#methods}}
{{^-first}}

{{/-first}}
    /** The method id used to dispatch <code>{{method.name}}</code> requests. */
    public static const {{code}} :int = {{-index}};

    // from interface {{name}}Service
    public function {{method.name}} ({{getASArgListSkipFirst}}) :void
    {
{{#listenerArgs}}
        var listener{{indexSkipFirst}} :{{actionScriptMarshaller}} = new {{actionScriptMarshaller}}();
        listener{{indexSkipFirst}}.listener = arg{{indexSkipFirst}};
{{/listenerArgs}}
        sendRequest({{code}}, [
            {{getASWrappedArgListSkipFirst}}
        ]);
    }
{{/methods}}
}
}
